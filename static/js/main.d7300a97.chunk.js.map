{"version":3,"sources":["serviceWorker.js","Services/YoutubeServices.jsx","actions/videosActions.js","components/SearchBlock.jsx","components/VideoViewer.js","components/SearchGrid.jsx","Pages/SearchPage.jsx","App.js","reducers/index.js","reducers/VideosReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","APIKEY","YTService","url","APIURL","getVideosByChannelId","channelId","maxResults","console","log","concat","axios","get","loadData","data","type","SearchBlock","handleSubmit","values","_this","props","getVideos","this","_this2","result","react_default","a","createElement","Fragment","formik_esm","enableReinitialize","initialValues","undefined","onSubmit","className","name","placeholder","component","Component","VideoViewer","state","onSave","val","updateComment","item","itemId","src","itemDetails","snippet","thumbnails","high","alt","title","description","index_es","value","itemComment","connect","searchResult","videosReducers","dispatch","id","comment","items","localStorage","getItem","jsonData","JSON","parse","map","Object","objectSpread","push","updatedData","setItem","stringify","VideosActions","SortableItem","SortableElement","_ref","components_VideoViewer","SortableList","SortableContainer","_ref2","index","key","SearchGrid","onSortEnd","_ref3","oldIndex","newIndex","reorder","axis","SearchPage","getFromStorage","components_SearchBlock","channel","components_SearchGrid","prev","next","reorderGrid","arguments","length","allItems","then","response","videoId","customItem","channelInfo","list","newOrder","arrayMove","App","Pages_SearchPage","rootReducer","combineReducers","payload","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7300a97.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//YoutubeServices\r\nimport axios from \"axios\";\r\nconst APIKEY = \"AIzaSyDKl7OTzudYuDUIpnllWwloOY6cYMADiaE\";\r\nconst APIURL = \"https://www.googleapis.com/youtube/v3\";\r\n\r\nexport const YTService = () => {\r\n  const url = APIURL + \"/search\";\r\n\r\n  return {\r\n    getVideosByChannelId: (channelId, maxResults) => {\r\n      console.log(\r\n        \"URL\",\r\n        `${url}?key=${APIKEY}&channelId=${channelId}&part=snippet,id&order=date&maxResults=${maxResults}`\r\n      );\r\n\r\n      return axios.get(\r\n        `${url}?key=${APIKEY}&channelId=${channelId}&part=snippet,id&order=date&maxResults=${maxResults}`\r\n      );\r\n    }\r\n  };\r\n};\r\n","import { YTService } from \"../Services/YoutubeServices\";\r\nimport arrayMove from \"array-move\";\r\n\r\nexport function getVideos(channelId = \"UCjzHeG1KWoonmf9d5KBvSiw\") {\r\n  return dispatch => {\r\n    let allItems = [];\r\n    return YTService()\r\n      .getVideosByChannelId(channelId, 20)\r\n      .then(response => {\r\n        console.log(\"::\", response);\r\n\r\n        // eslint-disable-next-line array-callback-return\r\n        response.data.items.map(item => {\r\n          if (item.id.videoId !== undefined) {\r\n            let customItem = {\r\n              itemDetails: item,\r\n              itemId: item.id.videoId,\r\n              itemComment: \"\"\r\n            };\r\n            return allItems.push(customItem);\r\n          }\r\n        });\r\n\r\n        let channelInfo = {\r\n          channelId: channelId,\r\n          items: allItems\r\n        };\r\n        localStorage.setItem(\"channelId\", JSON.stringify(channelInfo));\r\n        dispatch(loadData(channelInfo));\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadData(data) {\r\n  return {\r\n    type: \"LOAD_VIDEOS\",\r\n    data: data\r\n  };\r\n}\r\n\r\nexport function reorderGrid(channel, list, oldIndex, newIndex) {\r\n  return dispatch => {\r\n    console.log(\"Before Order\", list);\r\n    let newOrder = arrayMove(list, oldIndex, newIndex);\r\n\r\n    let channelInfo = {\r\n      channelId: channel,\r\n      items: newOrder\r\n    };\r\n    localStorage.setItem(\"channelId\", JSON.stringify(channelInfo));\r\n\r\n    dispatch(loadData(channelInfo));\r\n  };\r\n}\r\n\r\nexport function getFromStorage() {\r\n  return dispatch => {\r\n    let data = localStorage.getItem(\"channelId\");\r\n    let jsonData = JSON.parse(data);\r\n    dispatch(loadData(jsonData));\r\n  };\r\n}\r\n\r\nexport function updateComment(id, comment) {\r\n  return dispatch => {\r\n    console.log(\"updated\", id, comment);\r\n    let items = [];\r\n    const data = localStorage.getItem(\"channelId\");\r\n    const jsonData = JSON.parse(data);\r\n    console.log(\"json DATA\", jsonData);\r\n\r\n    // eslint-disable-next-line array-callback-return\r\n    jsonData.items.map(item => {\r\n      if (item.itemId === id) {\r\n        item.itemComment = comment;\r\n      } else {\r\n        item = { ...item };\r\n      }\r\n      items.push(item);\r\n    });\r\n\r\n    let updatedData = { ...jsonData, items };\r\n\r\n    localStorage.setItem(\"channelId\", JSON.stringify(updatedData));\r\n    dispatch(loadData(updatedData));\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nclass SearchBlock extends Component {\r\n  handleSubmit = values => {\r\n    console.log(\"CHannel id\", values);\r\n    this.props.getVideos(values.channelId);\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"searchblock\", this.props);\r\n  }\r\n  render() {\r\n    const channelId = this.props.result.channelId;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={{\r\n            channelId: channelId !== undefined ? channelId : \"\"\r\n          }}\r\n          onSubmit={values => this.handleSubmit(values)}\r\n        >\r\n          {() => (\r\n            <React.Fragment>\r\n              <Form className=\"youtube-search-form\">\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <Field\r\n                      type=\"text\"\r\n                      name=\"channelId\"\r\n                      placeholder=\"please type channel Id\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"channelId\"\r\n                      component=\"div\"\r\n                      className=\"error-message\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-2\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-success text-uppercase mt-0 btn-block\"\r\n                    >\r\n                      Search.\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </React.Fragment>\r\n          )}\r\n        </Formik>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBlock;\r\n","import React, { Component } from \"react\";\r\nimport EdiText from \"react-editext\";\r\nimport { connect } from \"react-redux\";\r\nimport * as VideosActions from \"../actions/videosActions\";\r\n\r\nclass VideoViewer extends Component {\r\n  state = {};\r\n  onSave = val => {\r\n    this.props.updateComment(this.props.item.itemId, val);\r\n  };\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <div className=\"col-lg-4 col-md-6 col-sm-12 mb-4\">\r\n        <div className=\"card h-100 \">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={item.itemDetails.snippet.thumbnails.high.url}\r\n            alt=\"Card  cap\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title text-danger\">\r\n              {item.itemDetails.snippet.title}\r\n            </h5>\r\n            <p className=\"card-text text-secondary\">\r\n              {item.itemDetails.snippet.description}\r\n            </p>\r\n\r\n            <EdiText\r\n              type=\"text\"\r\n              value={item.itemComment !== \"\" ? item.itemComment : \"Add note!\"}\r\n              onSave={this.onSave}\r\n            />\r\n            {/* <a href=\"#\" className=\"btn btn-primary\">\r\n              Play video\r\n            </a> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { searchResult: state.videosReducers };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateComment: (id, comment) => {\r\n      dispatch(VideosActions.updateComment(id, comment));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VideoViewer);\r\n","import React, { Component } from \"react\";\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport VideoViewer from \"./VideoViewer\";\r\nconst SortableItem = SortableElement(({ value }) => (\r\n  <VideoViewer item={value} />\r\n));\r\n\r\nconst SortableList = SortableContainer(({ items }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {items.map((value, index) => (\r\n        <SortableItem key={`item-${index}`} index={index} value={value} />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nclass SearchGrid extends Component {\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    this.props.reorder(\r\n      this.props.result.channelId,\r\n      this.props.result.items,\r\n      oldIndex,\r\n      newIndex\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col my-3 mt-5\">\r\n              <h3>Search Result</h3>\r\n              {console.log(\"log\", this.props.result)}\r\n            </div>\r\n          </div>\r\n          {this.props.result.items !== undefined && (\r\n            <SortableList\r\n              axis=\"xy\"\r\n              items={this.props.result.items}\r\n              onSortEnd={this.onSortEnd}\r\n            />\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchGrid;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as VideosActions from \"../actions/videosActions\";\r\nimport SearchBlock from \"../components/SearchBlock\";\r\nimport SearchGrid from \"../components/SearchGrid\";\r\nclass SearchPage extends Component {\r\n  state = {};\r\n\r\n  componentWillMount() {\r\n    var channelResult = localStorage.getItem(\"channelId\");\r\n\r\n    if (channelResult !== null) {\r\n      this.props.getFromStorage();\r\n    } else {\r\n      this.props.getVideos();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-wrapper\">\r\n          <header className=\"header\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"card mt-4 p-5\">\r\n                    <SearchBlock\r\n                      getVideos={channel => this.props.getVideos(channel)}\r\n                      result={this.props.searchResult}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <section className=\"search-result\">\r\n            <SearchGrid\r\n              result={this.props.searchResult}\r\n              reorder={(channel, items, prev, next) =>\r\n                this.props.reorderGrid(channel, items, prev, next)\r\n              }\r\n            />\r\n          </section>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { searchResult: state.videosReducers };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getVideos: id => {\r\n      dispatch(VideosActions.getVideos(id));\r\n    },\r\n    getFromStorage: () => {\r\n      dispatch(VideosActions.getFromStorage());\r\n    },\r\n    reorderGrid: (channel, items, prev, next) => {\r\n      dispatch(VideosActions.reorderGrid(channel, items, prev, next));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchPage);\r\n","import React from \"react\";\nimport SearchPage from \"./Pages/SearchPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchPage />\n    </div>\n  );\n}\n\nexport default App;\n","import videosReducers from \"./VideosReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  videosReducers\r\n});\r\n\r\nexport default rootReducer;\r\n","export default (state = {}, payload) => {\r\n  switch (payload.type) {\r\n    case \"LOAD_VIDEOS\":\r\n      return payload.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport \"./Assets/main.scss\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}